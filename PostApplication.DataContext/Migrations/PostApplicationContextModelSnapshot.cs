// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PostApplication.DataContext.PostApplication;

namespace PostApplication.DataContext.Migrations
{
    [DbContext(typeof(PostApplicationContext))]
    partial class PostApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PostApplication.DataContext.PostApplication.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BlogCreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("BlogCreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BlogDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BlogTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlogId");

                    b.HasIndex("BlogCreatedByUserId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("PostApplication.DataContext.PostApplication.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BlogId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostPublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PostStateId")
                        .HasColumnType("int");

                    b.Property<string>("PostText")
                        .HasColumnType("nvarchar(2000)")
                        .HasMaxLength(2000);

                    b.Property<string>("PostTitle")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("PostUserUserId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("BlogId");

                    b.HasIndex("PostStateId");

                    b.HasIndex("PostUserUserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("PostApplication.DataContext.PostApplication.PostState", b =>
                {
                    b.Property<int>("PostStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PostStateDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostStateName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PostStateId");

                    b.ToTable("PostStates");
                });

            modelBuilder.Entity("PostApplication.DataContext.PostApplication.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PostApplication.DataContext.PostApplication.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserLastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PostApplication.DataContext.PostApplication.Blog", b =>
                {
                    b.HasOne("PostApplication.DataContext.PostApplication.User", "BlogCreatedBy")
                        .WithMany()
                        .HasForeignKey("BlogCreatedByUserId");
                });

            modelBuilder.Entity("PostApplication.DataContext.PostApplication.Post", b =>
                {
                    b.HasOne("PostApplication.DataContext.PostApplication.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId");

                    b.HasOne("PostApplication.DataContext.PostApplication.PostState", "PostState")
                        .WithMany()
                        .HasForeignKey("PostStateId");

                    b.HasOne("PostApplication.DataContext.PostApplication.User", "PostUser")
                        .WithMany()
                        .HasForeignKey("PostUserUserId");
                });

            modelBuilder.Entity("PostApplication.DataContext.PostApplication.User", b =>
                {
                    b.HasOne("PostApplication.DataContext.PostApplication.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
